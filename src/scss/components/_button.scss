/**
 * @name Retro Button
 * @group components
 * @description
 * Button component with multiple color, size, and effect variants. Use modifier classes for color, size, shape, and effects.
 * @example scss
 *   <button class="retro-btn retro-btn-primary retro-btn-lg" role="button">Primary Large</button>
 */
 
@use "../variables" as *;
@use "../mixins" as *;
@use "sass:color";

/* Retro Button - Win9x Style Only */

// Define common shadow effects for reuse
$retro-btn-shadow-raised: inset 1px 1px 0 $retro-border-light, inset -1px -1px 0 $retro-border-dark, 1px 1px 0 $retro-border-medium;
$retro-btn-shadow-pressed: inset -1px -1px 0 $retro-border-light, inset 1px 1px 0 $retro-border-dark, 0.5px 0.5px 0 $retro-border-medium;
$retro-btn-shadow-hover-default: inset -0.5px -0.5px 0 $retro-border-light, inset 0.5px 0.5px 0 $retro-border-medium;

.retro-btn {
  display: inline-block;
  font-family: $retro-font;
  font-size: $retro-font-size-base;
  font-weight: normal;
  line-height: 1.4;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  padding: $retro-spacing-xs $retro-spacing-md;
  border: $retro-border-width-thick solid var(--retro-border-dark);
  border-radius: 0;
  background: var(--retro-light);
  color: var(--retro-black);
  box-shadow: $retro-btn-shadow-raised;
  transition: none;

  &:hover {
    background: var(--retro-white);
    box-shadow: $retro-btn-shadow-hover-default;
  }

  &:active {
    background: var(--retro-border-medium);
    color: var(--retro-white);
    box-shadow: $retro-btn-shadow-pressed;
  }

  &:focus {
    outline: 1px dotted var(--retro-black);
    outline-offset: -4px;
  }
}

.retro-btn-primary {
  background: $retro-primary;
  color: $retro-white;
  &:hover {
    background: color.adjust($retro-primary, $lightness: 10%);
  }
  &:active {
    background: color.adjust($retro-primary, $lightness: -10%);
  }
}

.retro-btn-success {
  background: $retro-success;
  color: $retro-white;
  &:hover { background: color.adjust($retro-success, $lightness: 10%); }
  &:active { background: color.adjust($retro-success, $lightness: -10%); }
}

.retro-btn-danger {
  background: $retro-danger;
  color: $retro-white;
  &:hover { background: color.adjust($retro-danger, $lightness: 10%); }
  &:active { background: color.adjust($retro-danger, $lightness: -10%); }
}

.retro-btn-warning {
  background: $retro-warning;
  color: $retro-black;
  &:hover { background: color.adjust($retro-warning, $lightness: 10%); }
  &:active { background: color.adjust($retro-warning, $lightness: -10%); }
}

// Button sizes
.retro-btn-xs {
  font-size: 10px;
  padding: 2px 8px;
  line-height: 1.2;
}

.retro-btn-sm {
  font-size: 12px;
  padding: 3px 10px;
  line-height: 1.3;
}

.retro-btn-md {
  font-size: 14px;
  padding: 4px 12px;
  line-height: 1.4;
}

.retro-btn-lg {
  font-size: 16px;
  padding: 6px 16px;
  line-height: 1.5;
}

.retro-btn-xl {
  font-size: 18px;
  padding: 8px 20px;
  line-height: 1.6;
}

.retro-btn-xxl {
  font-size: 20px;
  padding: 10px 24px;
  line-height: 1.7;
} 